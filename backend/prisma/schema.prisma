datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  name        String?
  password    String
  role        String   @default("STUDENT")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  coursesAsStudent Course[] @relation("StudentCourses")
  coursesAsTeacher Course[] @relation("TeacherCourses")
  grades           Grade[]
  listings         Product[]
  orders           Order[]
  events           AnalyticsEvent[]
}


model Course {
  id          Int      @id @default(autoincrement())
  name        String
  teacherId   Int
  teacher     User     @relation("TeacherCourses", fields: [teacherId], references: [id])
  students    User[]   @relation("StudentCourses")
  assignments Assignment[]
  schedule    String // Simple string for now, can be a JSON or a separate model later
}

model Assignment {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime
  courseId    Int
  course      Course   @relation(fields: [courseId], references: [id])
  grades      Grade[]
}

model Grade {
  id           Int        @id @default(autoincrement())
  score        Float
  assignmentId Int
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  studentId    Int
  student      User       @relation(fields: [studentId], references: [id])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  sellerId    Int
  seller      User     @relation(fields: [sellerId], references: [id])
  orders      Order[]
}

model Order {
  id         Int        @id @default(autoincrement())
  buyerId    Int
  buyer      User       @relation(fields: [buyerId], references: [id])
  totalPrice Float
  status     String @default("PENDING")
  products   Product[]
}


model AnalyticsEvent {
  id        Int      @id @default(autoincrement())
  type      String
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  data      String // Using String to store JSON data for simplicity with SQLite
  timestamp DateTime @default(now())
}

